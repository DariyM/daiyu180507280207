本书以教科书的方式，循序渐进地向软件开发人员或软件开发的项目管理人员，讲述如何快速掌握分布式版本控制系统 Git 的应用方法，
让繁琐复杂的项目开发的版本控制变得高效且轻松自如。书中细致入微地介绍了如何使用设置文件和操作Git文档库，
以及建立项目开发的分支、合并分支和解决冲突的操作;在具备扎实的基础之后，介绍了Git GUI程序用法，
以及 Git 在团队开发模式中应用的问题;讲述如何与全球的项目开发人员进行交流，
提升程序开发的经验和能力;介绍了GitHub、Bitbucket、GitLab等提供Git服务的网站;
本书最后的重点为介绍架设Git Server的几种方法，让每一个项目开发团队，可以按照自己的软硬件环境，选择适合的方式来控管项目开发。
在生产中，这实际上不是一个 Git 指令而是代表着从实际版本到生产的过程。
事实上我们可能为每个新版本都建立了存储库，但因为他们都很多共同点，我们可以只为每个版本建立分支，分支可以让我们基于相同的代码库保持多个版本。
如果使用后发现在现有版本中加入某个特征会更好，我们就可以用 merge 指令来整合两个分支。
加入有人推送了一个新的特征或代码到远程存储库中，我们可以通过 Git 协议中的 pull 指令提取新特征到我们的本地库。如果这个新特征与我们的存储库冲突，我们可以让代码恢复到改变前的状态，或者调整推送一个更新的版本到远程存储库。
Git 协议可以帮我们追踪并快速定位冲突，使得优化和修复都更加简单。
